---
layout: post
comments: true
description: Binary Search find the target in a sorted but rotated array.
date: 2017-11-10 19:51:00
title: Search in Rotated Sorted Array
category: Coding
tags: [Algorithm, Binary Search, Lintcode, Medium, Python]
---

**Description**
[Lintcode 62](http://www.lintcode.com/en/problem/search-in-rotated-sorted-array/)
Suppose a sorted array is rotated at some pivot unknown to you beforehand.
```java
(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).
```

You are given a target value to search. If found in the array return its index, otherwise return -1.

You may assume no duplicate exists in the array.

Example
```java
For [4, 5, 1, 2, 3] and target=1, return 2.

For [4, 5, 1, 2, 3] and target=0, return -1.

```

## Python Binary Search Solution
I have posted a Leetcode version of this problem previously.

```python
class Solution:
    """
    @param: A: an integer rotated sorted array
    @param: target: an integer to be searched
    @return: an integer
    """
    def search(self, A, target):
        # write your code here
        lo, hi = 0, len(A) - 1
        end = len(A) - 1
        nums = A
        while lo <= hi:
            mid = lo + (hi - lo) / 2
            if nums[mid] == target:
                return mid
            if nums[mid] < target: # find larger one
                if nums[mid] > nums[end]: # left part
                    lo = mid + 1
                else:
                    if nums[end] < target:
                        hi = mid - 1
                    else:
                        lo = mid + 1
                        
            else: # nums[mid] > target -- finding smaller one
                if nums[mid] > nums[end]: # left part
                    if nums[0] > target:
                        lo = mid + 1
                    else:
                        hi = mid - 1
                else: # right part
                    hi = mid - 1
                
        return -1
```

