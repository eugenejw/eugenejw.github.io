---
layout: post
comments: true
description: Two Forward Pointers
date: 2017-12-04 9:51:00
title: Remove Duplicate Numbers in Array 
category: Coding
tags: [Algorithm, Two Pointers, Lintcode, Easy, Python]
---

**Description**
[521. Remove Duplicate Numbers in Array](http://www.lintcode.com/en/problem/remove-duplicate-numbers-in-array/)

Given an array of integers, remove the duplicate numbers in it.

You should:
1. Do it in place in the array.
2. Move the unique numbers to the front of the array.
3. Return the total number of the unique numbers.

Note that,

You don't need to keep the original order of the integers.

Example
```java
Given nums = [1,3,1,4,4,2], you should:

Move duplicate integers to the tail of nums => nums = [1,3,4,2,?,?].
Return the number of unique integers in nums => 4.
Actually we don't care about what you place in ?, we only care about the part which has no duplicate integers.
```

Challenge 

Do it in O(n) time complexity.
Do it in O(nlogn) time without extra space.


### Python Solutions

```python
class Solution:
    """
    @param: nums: an array of integers
    @return: the number of unique integers
    """
    def deduplication(self, nums):
        
        # O(n) solution
        i = 0
        seen = set()
        for j in xrange(len(nums)):
            if nums[j] not in seen:
                seen.add(nums[j])
                nums[i] = nums[j]
                i += 1
        return i

        #Total Runtime: 857 ms
        #100% test cases passed.

        
        # O(nlogn) solution
        if not nums:
            return 0
            
        nums.sort()
        i = 1
        for j in xrange(1, len(nums)):
            if nums[j] != nums[j - 1]:
                nums[i] = nums[j]
                i += 1
                
        return i
        # Total Runtime: 907 ms
        # 100% test cases passed.
        
        # Two pointers using while
        
        if not nums:
            return 0
            
        nums.sort()
        i, j = 0, 0
        while j < len(nums):
            while j < len(nums) and nums[j] == nums[i]:
                j += 1
                if j >= len(nums):
                    return i + 1
                
            i += 1
            nums[i] = nums[j]
            
        return i + 1

	# Total Runtime: 1128 ms                
        #100% test cases passed.
                
```
